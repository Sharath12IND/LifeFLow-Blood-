Build a fully dynamic, professional, and responsive Blood Donation Web Application using React (frontend) and Node.js (backend). The website should have a clean, modern design with an emotionally engaging user experience, aimed at connecting voluntary blood donors with recipients in real-time.

🔻 Hero Section:
Include a bold blood drop logo/image as a centerpiece.

Use an impactful headline such as: “Donate Blood, Save Lives.”

Add a short mission-driven subtitle and two prominent call-to-action buttons:

🔴 Become a Donor

🔍 Find Blood

Use soft red tones, gradients, and white space for a professional and accessible first impression.

📝 Donor Registration:
A clean and accessible form that collects:

Full Name

Age

Blood Group (dropdown)

City and Pincode

Contact Number

Last Donation Date

Health Condition (radio buttons)

“Available to Donate” toggle switch

On submission, all donor data should be stored in a CSV file on the server via the Node.js backend.

Include front-end validation, and success/error messages for a seamless user experience.

📂 Donor Directory (Dynamic & Searchable):
List all donors dynamically.

Add filtering options based on:

Blood Group

City

Availability Status

Each donor card should show:

Name, Blood Group, Last Donation Date

Availability Badge (🟢 Available / 🔴 Unavailable)

Optional contact button (call/WhatsApp/email)

Donor Badge (e.g., “3X Donor”) based on donation count

Option for the donor to remain anonymous (initials only)

🆘 Blood Request System:
A separate form for people in need to submit requests:

Patient Name

Blood Group Needed

Hospital Name & Location

Contact Number

Urgency Level (Low / Medium / High)

Display active requests in a “Help Now” section for matching donors to view.

Add a “Mark as Fulfilled” option to close completed requests.

💡 Additional Meaningful Features:
Donor Availability Toggle – donors can manage their public status.

Blood Facts Section – quick education on blood groups, donation intervals, etc.

Donation Reminder System – optional feature to notify users 90 days after their last donation.

Emergency Alert Banner – live red alert for urgent blood needs at the top of the homepage.

Nearby Hospitals Map – embed Google Maps API with pins for local hospitals and blood banks.

One-Tap Contact Options – auto-generate contact buttons (e.g., "Call Now", "Send WhatsApp").

Social Sharing – allow users to share their donor profile or requests with a public link.

🖥️ UI/UX Design Guidelines:
Use Tailwind CSS, Material UI, or Chakra UI for a sleek, component-based UI.

Prioritize accessibility (keyboard-friendly, ARIA tags, large buttons).

Use animations subtly for smooth transitions (e.g., Framer Motion).

Responsive design across desktop, tablet, and mobile views.

📁 Backend Functionality (Node.js):
Handle donor form submissions and append data to a structured .csv file.

Support basic GET routes for retrieving donor and request data dynamically.

Integrate API endpoints for front-end to interact with data in real time.

Ensure proper validation and security of user data.

🔒 Optional (Advanced):
Admin panel to view or download CSV records.

Authentication system for donors to edit/update availability.

Email or SMS integration using services like SendGrid or Twilio for reminders and alerts.